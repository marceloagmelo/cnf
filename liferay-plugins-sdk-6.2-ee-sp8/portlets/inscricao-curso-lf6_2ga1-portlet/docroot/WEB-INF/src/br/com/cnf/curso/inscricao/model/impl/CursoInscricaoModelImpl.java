/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package br.com.cnf.curso.inscricao.model.impl;

import br.com.cnf.curso.inscricao.model.CursoInscricao;
import br.com.cnf.curso.inscricao.model.CursoInscricaoModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CursoInscricao service. Represents a row in the &quot;cnf_CursoInscricao&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.cnf.curso.inscricao.model.CursoInscricaoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CursoInscricaoImpl}.
 * </p>
 *
 * @author SEA
 * @see CursoInscricaoImpl
 * @see br.com.cnf.curso.inscricao.model.CursoInscricao
 * @see br.com.cnf.curso.inscricao.model.CursoInscricaoModel
 * @generated
 */
public class CursoInscricaoModelImpl extends BaseModelImpl<CursoInscricao>
	implements CursoInscricaoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a curso inscricao model instance should use the {@link br.com.cnf.curso.inscricao.model.CursoInscricao} interface instead.
	 */
	public static final String TABLE_NAME = "cnf_CursoInscricao";
	public static final Object[][] TABLE_COLUMNS = {
			{ "inscricaoId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userCreateId", Types.BIGINT },
			{ "userCreateName", Types.VARCHAR },
			{ "userModifiedId", Types.BIGINT },
			{ "userModifiedName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "cursoId", Types.BIGINT },
			{ "cursoNome", Types.VARCHAR },
			{ "cursoData", Types.VARCHAR },
			{ "cursoHorario", Types.VARCHAR },
			{ "cursoLocal", Types.VARCHAR },
			{ "preco", Types.VARCHAR },
			{ "precoConvenio", Types.VARCHAR },
			{ "precoAssociado", Types.VARCHAR },
			{ "tipoFisicaJuridica", Types.VARCHAR },
			{ "cpfCnpj", Types.VARCHAR },
			{ "nomeResponsavel", Types.VARCHAR },
			{ "emailPrincipal", Types.VARCHAR },
			{ "dddTelefoneComercial", Types.VARCHAR },
			{ "telefoneComercial", Types.VARCHAR },
			{ "sexo", Types.VARCHAR },
			{ "cadastroFinalizado", Types.BOOLEAN },
			{ "formaPagamento", Types.VARCHAR },
			{ "numeroCartao", Types.VARCHAR },
			{ "validadeCartaoMes", Types.INTEGER },
			{ "validadeCartaoAno", Types.INTEGER },
			{ "nomeTitularCartao", Types.VARCHAR },
			{ "codigoSegurancaCartao", Types.VARCHAR },
			{ "statusMoedaDigital", Types.VARCHAR },
			{ "quantidadeParcelas", Types.INTEGER },
			{ "valorTotal", Types.DOUBLE },
			{ "moedaDigitalPedido", Types.VARCHAR },
			{ "dataInicio", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table cnf_CursoInscricao (inscricaoId LONG not null primary key,companyId LONG,groupId LONG,userCreateId LONG,userCreateName VARCHAR(75) null,userModifiedId LONG,userModifiedName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,cursoId LONG,cursoNome VARCHAR(300) null,cursoData VARCHAR(75) null,cursoHorario VARCHAR(300) null,cursoLocal VARCHAR(300) null,preco VARCHAR(75) null,precoConvenio VARCHAR(75) null,precoAssociado VARCHAR(75) null,tipoFisicaJuridica VARCHAR(75) null,cpfCnpj VARCHAR(75) null,nomeResponsavel VARCHAR(300) null,emailPrincipal VARCHAR(300) null,dddTelefoneComercial VARCHAR(2) null,telefoneComercial VARCHAR(10) null,sexo VARCHAR(75) null,cadastroFinalizado BOOLEAN,formaPagamento VARCHAR(75) null,numeroCartao VARCHAR(75) null,validadeCartaoMes INTEGER,validadeCartaoAno INTEGER,nomeTitularCartao VARCHAR(75) null,codigoSegurancaCartao VARCHAR(75) null,statusMoedaDigital VARCHAR(75) null,quantidadeParcelas INTEGER,valorTotal DOUBLE,moedaDigitalPedido VARCHAR(75) null,dataInicio DATE null)";
	public static final String TABLE_SQL_DROP = "drop table cnf_CursoInscricao";
	public static final String ORDER_BY_JPQL = " ORDER BY cursoInscricao.cursoNome ASC";
	public static final String ORDER_BY_SQL = " ORDER BY cnf_CursoInscricao.cursoNome ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.cnf.curso.inscricao.model.CursoInscricao"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.cnf.curso.inscricao.model.CursoInscricao"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.cnf.curso.inscricao.model.CursoInscricao"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long CPFCNPJ_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long STATUSMOEDADIGITAL_COLUMN_BITMASK = 8L;
	public static long CURSONOME_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.cnf.curso.inscricao.model.CursoInscricao"));

	public CursoInscricaoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _inscricaoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInscricaoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _inscricaoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CursoInscricao.class;
	}

	@Override
	public String getModelClassName() {
		return CursoInscricao.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("inscricaoId", getInscricaoId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userCreateId", getUserCreateId());
		attributes.put("userCreateName", getUserCreateName());
		attributes.put("userModifiedId", getUserModifiedId());
		attributes.put("userModifiedName", getUserModifiedName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("cursoId", getCursoId());
		attributes.put("cursoNome", getCursoNome());
		attributes.put("cursoData", getCursoData());
		attributes.put("cursoHorario", getCursoHorario());
		attributes.put("cursoLocal", getCursoLocal());
		attributes.put("preco", getPreco());
		attributes.put("precoConvenio", getPrecoConvenio());
		attributes.put("precoAssociado", getPrecoAssociado());
		attributes.put("tipoFisicaJuridica", getTipoFisicaJuridica());
		attributes.put("cpfCnpj", getCpfCnpj());
		attributes.put("nomeResponsavel", getNomeResponsavel());
		attributes.put("emailPrincipal", getEmailPrincipal());
		attributes.put("dddTelefoneComercial", getDddTelefoneComercial());
		attributes.put("telefoneComercial", getTelefoneComercial());
		attributes.put("sexo", getSexo());
		attributes.put("cadastroFinalizado", getCadastroFinalizado());
		attributes.put("formaPagamento", getFormaPagamento());
		attributes.put("numeroCartao", getNumeroCartao());
		attributes.put("validadeCartaoMes", getValidadeCartaoMes());
		attributes.put("validadeCartaoAno", getValidadeCartaoAno());
		attributes.put("nomeTitularCartao", getNomeTitularCartao());
		attributes.put("codigoSegurancaCartao", getCodigoSegurancaCartao());
		attributes.put("statusMoedaDigital", getStatusMoedaDigital());
		attributes.put("quantidadeParcelas", getQuantidadeParcelas());
		attributes.put("valorTotal", getValorTotal());
		attributes.put("moedaDigitalPedido", getMoedaDigitalPedido());
		attributes.put("dataInicio", getDataInicio());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long inscricaoId = (Long)attributes.get("inscricaoId");

		if (inscricaoId != null) {
			setInscricaoId(inscricaoId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userCreateId = (Long)attributes.get("userCreateId");

		if (userCreateId != null) {
			setUserCreateId(userCreateId);
		}

		String userCreateName = (String)attributes.get("userCreateName");

		if (userCreateName != null) {
			setUserCreateName(userCreateName);
		}

		Long userModifiedId = (Long)attributes.get("userModifiedId");

		if (userModifiedId != null) {
			setUserModifiedId(userModifiedId);
		}

		String userModifiedName = (String)attributes.get("userModifiedName");

		if (userModifiedName != null) {
			setUserModifiedName(userModifiedName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long cursoId = (Long)attributes.get("cursoId");

		if (cursoId != null) {
			setCursoId(cursoId);
		}

		String cursoNome = (String)attributes.get("cursoNome");

		if (cursoNome != null) {
			setCursoNome(cursoNome);
		}

		String cursoData = (String)attributes.get("cursoData");

		if (cursoData != null) {
			setCursoData(cursoData);
		}

		String cursoHorario = (String)attributes.get("cursoHorario");

		if (cursoHorario != null) {
			setCursoHorario(cursoHorario);
		}

		String cursoLocal = (String)attributes.get("cursoLocal");

		if (cursoLocal != null) {
			setCursoLocal(cursoLocal);
		}

		String preco = (String)attributes.get("preco");

		if (preco != null) {
			setPreco(preco);
		}

		String precoConvenio = (String)attributes.get("precoConvenio");

		if (precoConvenio != null) {
			setPrecoConvenio(precoConvenio);
		}

		String precoAssociado = (String)attributes.get("precoAssociado");

		if (precoAssociado != null) {
			setPrecoAssociado(precoAssociado);
		}

		String tipoFisicaJuridica = (String)attributes.get("tipoFisicaJuridica");

		if (tipoFisicaJuridica != null) {
			setTipoFisicaJuridica(tipoFisicaJuridica);
		}

		String cpfCnpj = (String)attributes.get("cpfCnpj");

		if (cpfCnpj != null) {
			setCpfCnpj(cpfCnpj);
		}

		String nomeResponsavel = (String)attributes.get("nomeResponsavel");

		if (nomeResponsavel != null) {
			setNomeResponsavel(nomeResponsavel);
		}

		String emailPrincipal = (String)attributes.get("emailPrincipal");

		if (emailPrincipal != null) {
			setEmailPrincipal(emailPrincipal);
		}

		String dddTelefoneComercial = (String)attributes.get(
				"dddTelefoneComercial");

		if (dddTelefoneComercial != null) {
			setDddTelefoneComercial(dddTelefoneComercial);
		}

		String telefoneComercial = (String)attributes.get("telefoneComercial");

		if (telefoneComercial != null) {
			setTelefoneComercial(telefoneComercial);
		}

		String sexo = (String)attributes.get("sexo");

		if (sexo != null) {
			setSexo(sexo);
		}

		Boolean cadastroFinalizado = (Boolean)attributes.get(
				"cadastroFinalizado");

		if (cadastroFinalizado != null) {
			setCadastroFinalizado(cadastroFinalizado);
		}

		String formaPagamento = (String)attributes.get("formaPagamento");

		if (formaPagamento != null) {
			setFormaPagamento(formaPagamento);
		}

		String numeroCartao = (String)attributes.get("numeroCartao");

		if (numeroCartao != null) {
			setNumeroCartao(numeroCartao);
		}

		Integer validadeCartaoMes = (Integer)attributes.get("validadeCartaoMes");

		if (validadeCartaoMes != null) {
			setValidadeCartaoMes(validadeCartaoMes);
		}

		Integer validadeCartaoAno = (Integer)attributes.get("validadeCartaoAno");

		if (validadeCartaoAno != null) {
			setValidadeCartaoAno(validadeCartaoAno);
		}

		String nomeTitularCartao = (String)attributes.get("nomeTitularCartao");

		if (nomeTitularCartao != null) {
			setNomeTitularCartao(nomeTitularCartao);
		}

		String codigoSegurancaCartao = (String)attributes.get(
				"codigoSegurancaCartao");

		if (codigoSegurancaCartao != null) {
			setCodigoSegurancaCartao(codigoSegurancaCartao);
		}

		String statusMoedaDigital = (String)attributes.get("statusMoedaDigital");

		if (statusMoedaDigital != null) {
			setStatusMoedaDigital(statusMoedaDigital);
		}

		Integer quantidadeParcelas = (Integer)attributes.get(
				"quantidadeParcelas");

		if (quantidadeParcelas != null) {
			setQuantidadeParcelas(quantidadeParcelas);
		}

		Double valorTotal = (Double)attributes.get("valorTotal");

		if (valorTotal != null) {
			setValorTotal(valorTotal);
		}

		String moedaDigitalPedido = (String)attributes.get("moedaDigitalPedido");

		if (moedaDigitalPedido != null) {
			setMoedaDigitalPedido(moedaDigitalPedido);
		}

		Date dataInicio = (Date)attributes.get("dataInicio");

		if (dataInicio != null) {
			setDataInicio(dataInicio);
		}
	}

	@Override
	public long getInscricaoId() {
		return _inscricaoId;
	}

	@Override
	public void setInscricaoId(long inscricaoId) {
		_inscricaoId = inscricaoId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserCreateId() {
		return _userCreateId;
	}

	@Override
	public void setUserCreateId(long userCreateId) {
		_userCreateId = userCreateId;
	}

	@Override
	public String getUserCreateName() {
		if (_userCreateName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userCreateName;
		}
	}

	@Override
	public void setUserCreateName(String userCreateName) {
		_userCreateName = userCreateName;
	}

	@Override
	public long getUserModifiedId() {
		return _userModifiedId;
	}

	@Override
	public void setUserModifiedId(long userModifiedId) {
		_userModifiedId = userModifiedId;
	}

	@Override
	public String getUserModifiedName() {
		if (_userModifiedName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userModifiedName;
		}
	}

	@Override
	public void setUserModifiedName(String userModifiedName) {
		_userModifiedName = userModifiedName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCursoId() {
		return _cursoId;
	}

	@Override
	public void setCursoId(long cursoId) {
		_cursoId = cursoId;
	}

	@Override
	public String getCursoNome() {
		if (_cursoNome == null) {
			return StringPool.BLANK;
		}
		else {
			return _cursoNome;
		}
	}

	@Override
	public void setCursoNome(String cursoNome) {
		_columnBitmask = -1L;

		_cursoNome = cursoNome;
	}

	@Override
	public String getCursoData() {
		if (_cursoData == null) {
			return StringPool.BLANK;
		}
		else {
			return _cursoData;
		}
	}

	@Override
	public void setCursoData(String cursoData) {
		_cursoData = cursoData;
	}

	@Override
	public String getCursoHorario() {
		if (_cursoHorario == null) {
			return StringPool.BLANK;
		}
		else {
			return _cursoHorario;
		}
	}

	@Override
	public void setCursoHorario(String cursoHorario) {
		_cursoHorario = cursoHorario;
	}

	@Override
	public String getCursoLocal() {
		if (_cursoLocal == null) {
			return StringPool.BLANK;
		}
		else {
			return _cursoLocal;
		}
	}

	@Override
	public void setCursoLocal(String cursoLocal) {
		_cursoLocal = cursoLocal;
	}

	@Override
	public String getPreco() {
		if (_preco == null) {
			return StringPool.BLANK;
		}
		else {
			return _preco;
		}
	}

	@Override
	public void setPreco(String preco) {
		_preco = preco;
	}

	@Override
	public String getPrecoConvenio() {
		if (_precoConvenio == null) {
			return StringPool.BLANK;
		}
		else {
			return _precoConvenio;
		}
	}

	@Override
	public void setPrecoConvenio(String precoConvenio) {
		_precoConvenio = precoConvenio;
	}

	@Override
	public String getPrecoAssociado() {
		if (_precoAssociado == null) {
			return StringPool.BLANK;
		}
		else {
			return _precoAssociado;
		}
	}

	@Override
	public void setPrecoAssociado(String precoAssociado) {
		_precoAssociado = precoAssociado;
	}

	@Override
	public String getTipoFisicaJuridica() {
		if (_tipoFisicaJuridica == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoFisicaJuridica;
		}
	}

	@Override
	public void setTipoFisicaJuridica(String tipoFisicaJuridica) {
		_tipoFisicaJuridica = tipoFisicaJuridica;
	}

	@Override
	public String getCpfCnpj() {
		if (_cpfCnpj == null) {
			return StringPool.BLANK;
		}
		else {
			return _cpfCnpj;
		}
	}

	@Override
	public void setCpfCnpj(String cpfCnpj) {
		_columnBitmask |= CPFCNPJ_COLUMN_BITMASK;

		if (_originalCpfCnpj == null) {
			_originalCpfCnpj = _cpfCnpj;
		}

		_cpfCnpj = cpfCnpj;
	}

	public String getOriginalCpfCnpj() {
		return GetterUtil.getString(_originalCpfCnpj);
	}

	@Override
	public String getNomeResponsavel() {
		if (_nomeResponsavel == null) {
			return StringPool.BLANK;
		}
		else {
			return _nomeResponsavel;
		}
	}

	@Override
	public void setNomeResponsavel(String nomeResponsavel) {
		_nomeResponsavel = nomeResponsavel;
	}

	@Override
	public String getEmailPrincipal() {
		if (_emailPrincipal == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailPrincipal;
		}
	}

	@Override
	public void setEmailPrincipal(String emailPrincipal) {
		_emailPrincipal = emailPrincipal;
	}

	@Override
	public String getDddTelefoneComercial() {
		if (_dddTelefoneComercial == null) {
			return StringPool.BLANK;
		}
		else {
			return _dddTelefoneComercial;
		}
	}

	@Override
	public void setDddTelefoneComercial(String dddTelefoneComercial) {
		_dddTelefoneComercial = dddTelefoneComercial;
	}

	@Override
	public String getTelefoneComercial() {
		if (_telefoneComercial == null) {
			return StringPool.BLANK;
		}
		else {
			return _telefoneComercial;
		}
	}

	@Override
	public void setTelefoneComercial(String telefoneComercial) {
		_telefoneComercial = telefoneComercial;
	}

	@Override
	public String getSexo() {
		if (_sexo == null) {
			return StringPool.BLANK;
		}
		else {
			return _sexo;
		}
	}

	@Override
	public void setSexo(String sexo) {
		_sexo = sexo;
	}

	@Override
	public boolean getCadastroFinalizado() {
		return _cadastroFinalizado;
	}

	@Override
	public boolean isCadastroFinalizado() {
		return _cadastroFinalizado;
	}

	@Override
	public void setCadastroFinalizado(boolean cadastroFinalizado) {
		_cadastroFinalizado = cadastroFinalizado;
	}

	@Override
	public String getFormaPagamento() {
		if (_formaPagamento == null) {
			return StringPool.BLANK;
		}
		else {
			return _formaPagamento;
		}
	}

	@Override
	public void setFormaPagamento(String formaPagamento) {
		_formaPagamento = formaPagamento;
	}

	@Override
	public String getNumeroCartao() {
		if (_numeroCartao == null) {
			return StringPool.BLANK;
		}
		else {
			return _numeroCartao;
		}
	}

	@Override
	public void setNumeroCartao(String numeroCartao) {
		_numeroCartao = numeroCartao;
	}

	@Override
	public int getValidadeCartaoMes() {
		return _validadeCartaoMes;
	}

	@Override
	public void setValidadeCartaoMes(int validadeCartaoMes) {
		_validadeCartaoMes = validadeCartaoMes;
	}

	@Override
	public int getValidadeCartaoAno() {
		return _validadeCartaoAno;
	}

	@Override
	public void setValidadeCartaoAno(int validadeCartaoAno) {
		_validadeCartaoAno = validadeCartaoAno;
	}

	@Override
	public String getNomeTitularCartao() {
		if (_nomeTitularCartao == null) {
			return StringPool.BLANK;
		}
		else {
			return _nomeTitularCartao;
		}
	}

	@Override
	public void setNomeTitularCartao(String nomeTitularCartao) {
		_nomeTitularCartao = nomeTitularCartao;
	}

	@Override
	public String getCodigoSegurancaCartao() {
		if (_codigoSegurancaCartao == null) {
			return StringPool.BLANK;
		}
		else {
			return _codigoSegurancaCartao;
		}
	}

	@Override
	public void setCodigoSegurancaCartao(String codigoSegurancaCartao) {
		_codigoSegurancaCartao = codigoSegurancaCartao;
	}

	@Override
	public String getStatusMoedaDigital() {
		if (_statusMoedaDigital == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusMoedaDigital;
		}
	}

	@Override
	public void setStatusMoedaDigital(String statusMoedaDigital) {
		_columnBitmask |= STATUSMOEDADIGITAL_COLUMN_BITMASK;

		if (_originalStatusMoedaDigital == null) {
			_originalStatusMoedaDigital = _statusMoedaDigital;
		}

		_statusMoedaDigital = statusMoedaDigital;
	}

	public String getOriginalStatusMoedaDigital() {
		return GetterUtil.getString(_originalStatusMoedaDigital);
	}

	@Override
	public int getQuantidadeParcelas() {
		return _quantidadeParcelas;
	}

	@Override
	public void setQuantidadeParcelas(int quantidadeParcelas) {
		_quantidadeParcelas = quantidadeParcelas;
	}

	@Override
	public double getValorTotal() {
		return _valorTotal;
	}

	@Override
	public void setValorTotal(double valorTotal) {
		_valorTotal = valorTotal;
	}

	@Override
	public String getMoedaDigitalPedido() {
		if (_moedaDigitalPedido == null) {
			return StringPool.BLANK;
		}
		else {
			return _moedaDigitalPedido;
		}
	}

	@Override
	public void setMoedaDigitalPedido(String moedaDigitalPedido) {
		_moedaDigitalPedido = moedaDigitalPedido;
	}

	@Override
	public Date getDataInicio() {
		return _dataInicio;
	}

	@Override
	public void setDataInicio(Date dataInicio) {
		_dataInicio = dataInicio;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CursoInscricao.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CursoInscricao toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CursoInscricao)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CursoInscricaoImpl cursoInscricaoImpl = new CursoInscricaoImpl();

		cursoInscricaoImpl.setInscricaoId(getInscricaoId());
		cursoInscricaoImpl.setCompanyId(getCompanyId());
		cursoInscricaoImpl.setGroupId(getGroupId());
		cursoInscricaoImpl.setUserCreateId(getUserCreateId());
		cursoInscricaoImpl.setUserCreateName(getUserCreateName());
		cursoInscricaoImpl.setUserModifiedId(getUserModifiedId());
		cursoInscricaoImpl.setUserModifiedName(getUserModifiedName());
		cursoInscricaoImpl.setCreateDate(getCreateDate());
		cursoInscricaoImpl.setModifiedDate(getModifiedDate());
		cursoInscricaoImpl.setCursoId(getCursoId());
		cursoInscricaoImpl.setCursoNome(getCursoNome());
		cursoInscricaoImpl.setCursoData(getCursoData());
		cursoInscricaoImpl.setCursoHorario(getCursoHorario());
		cursoInscricaoImpl.setCursoLocal(getCursoLocal());
		cursoInscricaoImpl.setPreco(getPreco());
		cursoInscricaoImpl.setPrecoConvenio(getPrecoConvenio());
		cursoInscricaoImpl.setPrecoAssociado(getPrecoAssociado());
		cursoInscricaoImpl.setTipoFisicaJuridica(getTipoFisicaJuridica());
		cursoInscricaoImpl.setCpfCnpj(getCpfCnpj());
		cursoInscricaoImpl.setNomeResponsavel(getNomeResponsavel());
		cursoInscricaoImpl.setEmailPrincipal(getEmailPrincipal());
		cursoInscricaoImpl.setDddTelefoneComercial(getDddTelefoneComercial());
		cursoInscricaoImpl.setTelefoneComercial(getTelefoneComercial());
		cursoInscricaoImpl.setSexo(getSexo());
		cursoInscricaoImpl.setCadastroFinalizado(getCadastroFinalizado());
		cursoInscricaoImpl.setFormaPagamento(getFormaPagamento());
		cursoInscricaoImpl.setNumeroCartao(getNumeroCartao());
		cursoInscricaoImpl.setValidadeCartaoMes(getValidadeCartaoMes());
		cursoInscricaoImpl.setValidadeCartaoAno(getValidadeCartaoAno());
		cursoInscricaoImpl.setNomeTitularCartao(getNomeTitularCartao());
		cursoInscricaoImpl.setCodigoSegurancaCartao(getCodigoSegurancaCartao());
		cursoInscricaoImpl.setStatusMoedaDigital(getStatusMoedaDigital());
		cursoInscricaoImpl.setQuantidadeParcelas(getQuantidadeParcelas());
		cursoInscricaoImpl.setValorTotal(getValorTotal());
		cursoInscricaoImpl.setMoedaDigitalPedido(getMoedaDigitalPedido());
		cursoInscricaoImpl.setDataInicio(getDataInicio());

		cursoInscricaoImpl.resetOriginalValues();

		return cursoInscricaoImpl;
	}

	@Override
	public int compareTo(CursoInscricao cursoInscricao) {
		int value = 0;

		value = getCursoNome().compareTo(cursoInscricao.getCursoNome());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CursoInscricao)) {
			return false;
		}

		CursoInscricao cursoInscricao = (CursoInscricao)obj;

		long primaryKey = cursoInscricao.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CursoInscricaoModelImpl cursoInscricaoModelImpl = this;

		cursoInscricaoModelImpl._originalCompanyId = cursoInscricaoModelImpl._companyId;

		cursoInscricaoModelImpl._setOriginalCompanyId = false;

		cursoInscricaoModelImpl._originalGroupId = cursoInscricaoModelImpl._groupId;

		cursoInscricaoModelImpl._setOriginalGroupId = false;

		cursoInscricaoModelImpl._originalCpfCnpj = cursoInscricaoModelImpl._cpfCnpj;

		cursoInscricaoModelImpl._originalStatusMoedaDigital = cursoInscricaoModelImpl._statusMoedaDigital;

		cursoInscricaoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CursoInscricao> toCacheModel() {
		CursoInscricaoCacheModel cursoInscricaoCacheModel = new CursoInscricaoCacheModel();

		cursoInscricaoCacheModel.inscricaoId = getInscricaoId();

		cursoInscricaoCacheModel.companyId = getCompanyId();

		cursoInscricaoCacheModel.groupId = getGroupId();

		cursoInscricaoCacheModel.userCreateId = getUserCreateId();

		cursoInscricaoCacheModel.userCreateName = getUserCreateName();

		String userCreateName = cursoInscricaoCacheModel.userCreateName;

		if ((userCreateName != null) && (userCreateName.length() == 0)) {
			cursoInscricaoCacheModel.userCreateName = null;
		}

		cursoInscricaoCacheModel.userModifiedId = getUserModifiedId();

		cursoInscricaoCacheModel.userModifiedName = getUserModifiedName();

		String userModifiedName = cursoInscricaoCacheModel.userModifiedName;

		if ((userModifiedName != null) && (userModifiedName.length() == 0)) {
			cursoInscricaoCacheModel.userModifiedName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			cursoInscricaoCacheModel.createDate = createDate.getTime();
		}
		else {
			cursoInscricaoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			cursoInscricaoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			cursoInscricaoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		cursoInscricaoCacheModel.cursoId = getCursoId();

		cursoInscricaoCacheModel.cursoNome = getCursoNome();

		String cursoNome = cursoInscricaoCacheModel.cursoNome;

		if ((cursoNome != null) && (cursoNome.length() == 0)) {
			cursoInscricaoCacheModel.cursoNome = null;
		}

		cursoInscricaoCacheModel.cursoData = getCursoData();

		String cursoData = cursoInscricaoCacheModel.cursoData;

		if ((cursoData != null) && (cursoData.length() == 0)) {
			cursoInscricaoCacheModel.cursoData = null;
		}

		cursoInscricaoCacheModel.cursoHorario = getCursoHorario();

		String cursoHorario = cursoInscricaoCacheModel.cursoHorario;

		if ((cursoHorario != null) && (cursoHorario.length() == 0)) {
			cursoInscricaoCacheModel.cursoHorario = null;
		}

		cursoInscricaoCacheModel.cursoLocal = getCursoLocal();

		String cursoLocal = cursoInscricaoCacheModel.cursoLocal;

		if ((cursoLocal != null) && (cursoLocal.length() == 0)) {
			cursoInscricaoCacheModel.cursoLocal = null;
		}

		cursoInscricaoCacheModel.preco = getPreco();

		String preco = cursoInscricaoCacheModel.preco;

		if ((preco != null) && (preco.length() == 0)) {
			cursoInscricaoCacheModel.preco = null;
		}

		cursoInscricaoCacheModel.precoConvenio = getPrecoConvenio();

		String precoConvenio = cursoInscricaoCacheModel.precoConvenio;

		if ((precoConvenio != null) && (precoConvenio.length() == 0)) {
			cursoInscricaoCacheModel.precoConvenio = null;
		}

		cursoInscricaoCacheModel.precoAssociado = getPrecoAssociado();

		String precoAssociado = cursoInscricaoCacheModel.precoAssociado;

		if ((precoAssociado != null) && (precoAssociado.length() == 0)) {
			cursoInscricaoCacheModel.precoAssociado = null;
		}

		cursoInscricaoCacheModel.tipoFisicaJuridica = getTipoFisicaJuridica();

		String tipoFisicaJuridica = cursoInscricaoCacheModel.tipoFisicaJuridica;

		if ((tipoFisicaJuridica != null) && (tipoFisicaJuridica.length() == 0)) {
			cursoInscricaoCacheModel.tipoFisicaJuridica = null;
		}

		cursoInscricaoCacheModel.cpfCnpj = getCpfCnpj();

		String cpfCnpj = cursoInscricaoCacheModel.cpfCnpj;

		if ((cpfCnpj != null) && (cpfCnpj.length() == 0)) {
			cursoInscricaoCacheModel.cpfCnpj = null;
		}

		cursoInscricaoCacheModel.nomeResponsavel = getNomeResponsavel();

		String nomeResponsavel = cursoInscricaoCacheModel.nomeResponsavel;

		if ((nomeResponsavel != null) && (nomeResponsavel.length() == 0)) {
			cursoInscricaoCacheModel.nomeResponsavel = null;
		}

		cursoInscricaoCacheModel.emailPrincipal = getEmailPrincipal();

		String emailPrincipal = cursoInscricaoCacheModel.emailPrincipal;

		if ((emailPrincipal != null) && (emailPrincipal.length() == 0)) {
			cursoInscricaoCacheModel.emailPrincipal = null;
		}

		cursoInscricaoCacheModel.dddTelefoneComercial = getDddTelefoneComercial();

		String dddTelefoneComercial = cursoInscricaoCacheModel.dddTelefoneComercial;

		if ((dddTelefoneComercial != null) &&
				(dddTelefoneComercial.length() == 0)) {
			cursoInscricaoCacheModel.dddTelefoneComercial = null;
		}

		cursoInscricaoCacheModel.telefoneComercial = getTelefoneComercial();

		String telefoneComercial = cursoInscricaoCacheModel.telefoneComercial;

		if ((telefoneComercial != null) && (telefoneComercial.length() == 0)) {
			cursoInscricaoCacheModel.telefoneComercial = null;
		}

		cursoInscricaoCacheModel.sexo = getSexo();

		String sexo = cursoInscricaoCacheModel.sexo;

		if ((sexo != null) && (sexo.length() == 0)) {
			cursoInscricaoCacheModel.sexo = null;
		}

		cursoInscricaoCacheModel.cadastroFinalizado = getCadastroFinalizado();

		cursoInscricaoCacheModel.formaPagamento = getFormaPagamento();

		String formaPagamento = cursoInscricaoCacheModel.formaPagamento;

		if ((formaPagamento != null) && (formaPagamento.length() == 0)) {
			cursoInscricaoCacheModel.formaPagamento = null;
		}

		cursoInscricaoCacheModel.numeroCartao = getNumeroCartao();

		String numeroCartao = cursoInscricaoCacheModel.numeroCartao;

		if ((numeroCartao != null) && (numeroCartao.length() == 0)) {
			cursoInscricaoCacheModel.numeroCartao = null;
		}

		cursoInscricaoCacheModel.validadeCartaoMes = getValidadeCartaoMes();

		cursoInscricaoCacheModel.validadeCartaoAno = getValidadeCartaoAno();

		cursoInscricaoCacheModel.nomeTitularCartao = getNomeTitularCartao();

		String nomeTitularCartao = cursoInscricaoCacheModel.nomeTitularCartao;

		if ((nomeTitularCartao != null) && (nomeTitularCartao.length() == 0)) {
			cursoInscricaoCacheModel.nomeTitularCartao = null;
		}

		cursoInscricaoCacheModel.codigoSegurancaCartao = getCodigoSegurancaCartao();

		String codigoSegurancaCartao = cursoInscricaoCacheModel.codigoSegurancaCartao;

		if ((codigoSegurancaCartao != null) &&
				(codigoSegurancaCartao.length() == 0)) {
			cursoInscricaoCacheModel.codigoSegurancaCartao = null;
		}

		cursoInscricaoCacheModel.statusMoedaDigital = getStatusMoedaDigital();

		String statusMoedaDigital = cursoInscricaoCacheModel.statusMoedaDigital;

		if ((statusMoedaDigital != null) && (statusMoedaDigital.length() == 0)) {
			cursoInscricaoCacheModel.statusMoedaDigital = null;
		}

		cursoInscricaoCacheModel.quantidadeParcelas = getQuantidadeParcelas();

		cursoInscricaoCacheModel.valorTotal = getValorTotal();

		cursoInscricaoCacheModel.moedaDigitalPedido = getMoedaDigitalPedido();

		String moedaDigitalPedido = cursoInscricaoCacheModel.moedaDigitalPedido;

		if ((moedaDigitalPedido != null) && (moedaDigitalPedido.length() == 0)) {
			cursoInscricaoCacheModel.moedaDigitalPedido = null;
		}

		Date dataInicio = getDataInicio();

		if (dataInicio != null) {
			cursoInscricaoCacheModel.dataInicio = dataInicio.getTime();
		}
		else {
			cursoInscricaoCacheModel.dataInicio = Long.MIN_VALUE;
		}

		return cursoInscricaoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(73);

		sb.append("{inscricaoId=");
		sb.append(getInscricaoId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userCreateId=");
		sb.append(getUserCreateId());
		sb.append(", userCreateName=");
		sb.append(getUserCreateName());
		sb.append(", userModifiedId=");
		sb.append(getUserModifiedId());
		sb.append(", userModifiedName=");
		sb.append(getUserModifiedName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", cursoId=");
		sb.append(getCursoId());
		sb.append(", cursoNome=");
		sb.append(getCursoNome());
		sb.append(", cursoData=");
		sb.append(getCursoData());
		sb.append(", cursoHorario=");
		sb.append(getCursoHorario());
		sb.append(", cursoLocal=");
		sb.append(getCursoLocal());
		sb.append(", preco=");
		sb.append(getPreco());
		sb.append(", precoConvenio=");
		sb.append(getPrecoConvenio());
		sb.append(", precoAssociado=");
		sb.append(getPrecoAssociado());
		sb.append(", tipoFisicaJuridica=");
		sb.append(getTipoFisicaJuridica());
		sb.append(", cpfCnpj=");
		sb.append(getCpfCnpj());
		sb.append(", nomeResponsavel=");
		sb.append(getNomeResponsavel());
		sb.append(", emailPrincipal=");
		sb.append(getEmailPrincipal());
		sb.append(", dddTelefoneComercial=");
		sb.append(getDddTelefoneComercial());
		sb.append(", telefoneComercial=");
		sb.append(getTelefoneComercial());
		sb.append(", sexo=");
		sb.append(getSexo());
		sb.append(", cadastroFinalizado=");
		sb.append(getCadastroFinalizado());
		sb.append(", formaPagamento=");
		sb.append(getFormaPagamento());
		sb.append(", numeroCartao=");
		sb.append(getNumeroCartao());
		sb.append(", validadeCartaoMes=");
		sb.append(getValidadeCartaoMes());
		sb.append(", validadeCartaoAno=");
		sb.append(getValidadeCartaoAno());
		sb.append(", nomeTitularCartao=");
		sb.append(getNomeTitularCartao());
		sb.append(", codigoSegurancaCartao=");
		sb.append(getCodigoSegurancaCartao());
		sb.append(", statusMoedaDigital=");
		sb.append(getStatusMoedaDigital());
		sb.append(", quantidadeParcelas=");
		sb.append(getQuantidadeParcelas());
		sb.append(", valorTotal=");
		sb.append(getValorTotal());
		sb.append(", moedaDigitalPedido=");
		sb.append(getMoedaDigitalPedido());
		sb.append(", dataInicio=");
		sb.append(getDataInicio());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(112);

		sb.append("<model><model-name>");
		sb.append("br.com.cnf.curso.inscricao.model.CursoInscricao");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>inscricaoId</column-name><column-value><![CDATA[");
		sb.append(getInscricaoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userCreateId</column-name><column-value><![CDATA[");
		sb.append(getUserCreateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userCreateName</column-name><column-value><![CDATA[");
		sb.append(getUserCreateName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userModifiedId</column-name><column-value><![CDATA[");
		sb.append(getUserModifiedId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userModifiedName</column-name><column-value><![CDATA[");
		sb.append(getUserModifiedName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cursoId</column-name><column-value><![CDATA[");
		sb.append(getCursoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cursoNome</column-name><column-value><![CDATA[");
		sb.append(getCursoNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cursoData</column-name><column-value><![CDATA[");
		sb.append(getCursoData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cursoHorario</column-name><column-value><![CDATA[");
		sb.append(getCursoHorario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cursoLocal</column-name><column-value><![CDATA[");
		sb.append(getCursoLocal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>preco</column-name><column-value><![CDATA[");
		sb.append(getPreco());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>precoConvenio</column-name><column-value><![CDATA[");
		sb.append(getPrecoConvenio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>precoAssociado</column-name><column-value><![CDATA[");
		sb.append(getPrecoAssociado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoFisicaJuridica</column-name><column-value><![CDATA[");
		sb.append(getTipoFisicaJuridica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cpfCnpj</column-name><column-value><![CDATA[");
		sb.append(getCpfCnpj());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nomeResponsavel</column-name><column-value><![CDATA[");
		sb.append(getNomeResponsavel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailPrincipal</column-name><column-value><![CDATA[");
		sb.append(getEmailPrincipal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dddTelefoneComercial</column-name><column-value><![CDATA[");
		sb.append(getDddTelefoneComercial());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telefoneComercial</column-name><column-value><![CDATA[");
		sb.append(getTelefoneComercial());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sexo</column-name><column-value><![CDATA[");
		sb.append(getSexo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cadastroFinalizado</column-name><column-value><![CDATA[");
		sb.append(getCadastroFinalizado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formaPagamento</column-name><column-value><![CDATA[");
		sb.append(getFormaPagamento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numeroCartao</column-name><column-value><![CDATA[");
		sb.append(getNumeroCartao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>validadeCartaoMes</column-name><column-value><![CDATA[");
		sb.append(getValidadeCartaoMes());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>validadeCartaoAno</column-name><column-value><![CDATA[");
		sb.append(getValidadeCartaoAno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nomeTitularCartao</column-name><column-value><![CDATA[");
		sb.append(getNomeTitularCartao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codigoSegurancaCartao</column-name><column-value><![CDATA[");
		sb.append(getCodigoSegurancaCartao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusMoedaDigital</column-name><column-value><![CDATA[");
		sb.append(getStatusMoedaDigital());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quantidadeParcelas</column-name><column-value><![CDATA[");
		sb.append(getQuantidadeParcelas());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valorTotal</column-name><column-value><![CDATA[");
		sb.append(getValorTotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moedaDigitalPedido</column-name><column-value><![CDATA[");
		sb.append(getMoedaDigitalPedido());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataInicio</column-name><column-value><![CDATA[");
		sb.append(getDataInicio());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CursoInscricao.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CursoInscricao.class
		};
	private long _inscricaoId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userCreateId;
	private String _userCreateName;
	private long _userModifiedId;
	private String _userModifiedName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _cursoId;
	private String _cursoNome;
	private String _cursoData;
	private String _cursoHorario;
	private String _cursoLocal;
	private String _preco;
	private String _precoConvenio;
	private String _precoAssociado;
	private String _tipoFisicaJuridica;
	private String _cpfCnpj;
	private String _originalCpfCnpj;
	private String _nomeResponsavel;
	private String _emailPrincipal;
	private String _dddTelefoneComercial;
	private String _telefoneComercial;
	private String _sexo;
	private boolean _cadastroFinalizado;
	private String _formaPagamento;
	private String _numeroCartao;
	private int _validadeCartaoMes;
	private int _validadeCartaoAno;
	private String _nomeTitularCartao;
	private String _codigoSegurancaCartao;
	private String _statusMoedaDigital;
	private String _originalStatusMoedaDigital;
	private int _quantidadeParcelas;
	private double _valorTotal;
	private String _moedaDigitalPedido;
	private Date _dataInicio;
	private long _columnBitmask;
	private CursoInscricao _escapedModel;
}
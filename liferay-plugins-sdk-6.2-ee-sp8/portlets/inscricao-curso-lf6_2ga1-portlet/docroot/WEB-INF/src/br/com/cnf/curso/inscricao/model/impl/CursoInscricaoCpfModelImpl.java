/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package br.com.cnf.curso.inscricao.model.impl;

import br.com.cnf.curso.inscricao.model.CursoInscricaoCpf;
import br.com.cnf.curso.inscricao.model.CursoInscricaoCpfModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CursoInscricaoCpf service. Represents a row in the &quot;cnf_CursoInscricaoCpf&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.cnf.curso.inscricao.model.CursoInscricaoCpfModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CursoInscricaoCpfImpl}.
 * </p>
 *
 * @author SEA
 * @see CursoInscricaoCpfImpl
 * @see br.com.cnf.curso.inscricao.model.CursoInscricaoCpf
 * @see br.com.cnf.curso.inscricao.model.CursoInscricaoCpfModel
 * @generated
 */
public class CursoInscricaoCpfModelImpl extends BaseModelImpl<CursoInscricaoCpf>
	implements CursoInscricaoCpfModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a curso inscricao cpf model instance should use the {@link br.com.cnf.curso.inscricao.model.CursoInscricaoCpf} interface instead.
	 */
	public static final String TABLE_NAME = "cnf_CursoInscricaoCpf";
	public static final Object[][] TABLE_COLUMNS = {
			{ "inscricaoCpfId", Types.BIGINT },
			{ "inscricaoId", Types.BIGINT },
			{ "nome", Types.VARCHAR },
			{ "cpf", Types.VARCHAR },
			{ "endereco", Types.VARCHAR },
			{ "bairro", Types.VARCHAR },
			{ "cidade", Types.VARCHAR },
			{ "estado", Types.VARCHAR },
			{ "cep", Types.VARCHAR },
			{ "dddTelefone", Types.VARCHAR },
			{ "telefone", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "empresa", Types.VARCHAR },
			{ "cargo", Types.VARCHAR },
			{ "departamento", Types.VARCHAR },
			{ "observacao", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table cnf_CursoInscricaoCpf (inscricaoCpfId LONG not null primary key,inscricaoId LONG,nome VARCHAR(300) null,cpf VARCHAR(75) null,endereco VARCHAR(300) null,bairro VARCHAR(75) null,cidade VARCHAR(75) null,estado VARCHAR(75) null,cep VARCHAR(75) null,dddTelefone VARCHAR(2) null,telefone VARCHAR(10) null,email VARCHAR(300) null,empresa VARCHAR(75) null,cargo VARCHAR(75) null,departamento VARCHAR(75) null,observacao VARCHAR(1000) null)";
	public static final String TABLE_SQL_DROP = "drop table cnf_CursoInscricaoCpf";
	public static final String ORDER_BY_JPQL = " ORDER BY cursoInscricaoCpf.nome ASC";
	public static final String ORDER_BY_SQL = " ORDER BY cnf_CursoInscricaoCpf.nome ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.cnf.curso.inscricao.model.CursoInscricaoCpf"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.cnf.curso.inscricao.model.CursoInscricaoCpf"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.cnf.curso.inscricao.model.CursoInscricaoCpf"));

	public CursoInscricaoCpfModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _inscricaoCpfId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInscricaoCpfId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _inscricaoCpfId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CursoInscricaoCpf.class;
	}

	@Override
	public String getModelClassName() {
		return CursoInscricaoCpf.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("inscricaoCpfId", getInscricaoCpfId());
		attributes.put("inscricaoId", getInscricaoId());
		attributes.put("nome", getNome());
		attributes.put("cpf", getCpf());
		attributes.put("endereco", getEndereco());
		attributes.put("bairro", getBairro());
		attributes.put("cidade", getCidade());
		attributes.put("estado", getEstado());
		attributes.put("cep", getCep());
		attributes.put("dddTelefone", getDddTelefone());
		attributes.put("telefone", getTelefone());
		attributes.put("email", getEmail());
		attributes.put("empresa", getEmpresa());
		attributes.put("cargo", getCargo());
		attributes.put("departamento", getDepartamento());
		attributes.put("observacao", getObservacao());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long inscricaoCpfId = (Long)attributes.get("inscricaoCpfId");

		if (inscricaoCpfId != null) {
			setInscricaoCpfId(inscricaoCpfId);
		}

		Long inscricaoId = (Long)attributes.get("inscricaoId");

		if (inscricaoId != null) {
			setInscricaoId(inscricaoId);
		}

		String nome = (String)attributes.get("nome");

		if (nome != null) {
			setNome(nome);
		}

		String cpf = (String)attributes.get("cpf");

		if (cpf != null) {
			setCpf(cpf);
		}

		String endereco = (String)attributes.get("endereco");

		if (endereco != null) {
			setEndereco(endereco);
		}

		String bairro = (String)attributes.get("bairro");

		if (bairro != null) {
			setBairro(bairro);
		}

		String cidade = (String)attributes.get("cidade");

		if (cidade != null) {
			setCidade(cidade);
		}

		String estado = (String)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}

		String cep = (String)attributes.get("cep");

		if (cep != null) {
			setCep(cep);
		}

		String dddTelefone = (String)attributes.get("dddTelefone");

		if (dddTelefone != null) {
			setDddTelefone(dddTelefone);
		}

		String telefone = (String)attributes.get("telefone");

		if (telefone != null) {
			setTelefone(telefone);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String empresa = (String)attributes.get("empresa");

		if (empresa != null) {
			setEmpresa(empresa);
		}

		String cargo = (String)attributes.get("cargo");

		if (cargo != null) {
			setCargo(cargo);
		}

		String departamento = (String)attributes.get("departamento");

		if (departamento != null) {
			setDepartamento(departamento);
		}

		String observacao = (String)attributes.get("observacao");

		if (observacao != null) {
			setObservacao(observacao);
		}
	}

	@Override
	public long getInscricaoCpfId() {
		return _inscricaoCpfId;
	}

	@Override
	public void setInscricaoCpfId(long inscricaoCpfId) {
		_inscricaoCpfId = inscricaoCpfId;
	}

	@Override
	public long getInscricaoId() {
		return _inscricaoId;
	}

	@Override
	public void setInscricaoId(long inscricaoId) {
		_inscricaoId = inscricaoId;
	}

	@Override
	public String getNome() {
		if (_nome == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome;
		}
	}

	@Override
	public void setNome(String nome) {
		_nome = nome;
	}

	@Override
	public String getCpf() {
		if (_cpf == null) {
			return StringPool.BLANK;
		}
		else {
			return _cpf;
		}
	}

	@Override
	public void setCpf(String cpf) {
		_cpf = cpf;
	}

	@Override
	public String getEndereco() {
		if (_endereco == null) {
			return StringPool.BLANK;
		}
		else {
			return _endereco;
		}
	}

	@Override
	public void setEndereco(String endereco) {
		_endereco = endereco;
	}

	@Override
	public String getBairro() {
		if (_bairro == null) {
			return StringPool.BLANK;
		}
		else {
			return _bairro;
		}
	}

	@Override
	public void setBairro(String bairro) {
		_bairro = bairro;
	}

	@Override
	public String getCidade() {
		if (_cidade == null) {
			return StringPool.BLANK;
		}
		else {
			return _cidade;
		}
	}

	@Override
	public void setCidade(String cidade) {
		_cidade = cidade;
	}

	@Override
	public String getEstado() {
		if (_estado == null) {
			return StringPool.BLANK;
		}
		else {
			return _estado;
		}
	}

	@Override
	public void setEstado(String estado) {
		_estado = estado;
	}

	@Override
	public String getCep() {
		if (_cep == null) {
			return StringPool.BLANK;
		}
		else {
			return _cep;
		}
	}

	@Override
	public void setCep(String cep) {
		_cep = cep;
	}

	@Override
	public String getDddTelefone() {
		if (_dddTelefone == null) {
			return StringPool.BLANK;
		}
		else {
			return _dddTelefone;
		}
	}

	@Override
	public void setDddTelefone(String dddTelefone) {
		_dddTelefone = dddTelefone;
	}

	@Override
	public String getTelefone() {
		if (_telefone == null) {
			return StringPool.BLANK;
		}
		else {
			return _telefone;
		}
	}

	@Override
	public void setTelefone(String telefone) {
		_telefone = telefone;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getEmpresa() {
		if (_empresa == null) {
			return StringPool.BLANK;
		}
		else {
			return _empresa;
		}
	}

	@Override
	public void setEmpresa(String empresa) {
		_empresa = empresa;
	}

	@Override
	public String getCargo() {
		if (_cargo == null) {
			return StringPool.BLANK;
		}
		else {
			return _cargo;
		}
	}

	@Override
	public void setCargo(String cargo) {
		_cargo = cargo;
	}

	@Override
	public String getDepartamento() {
		if (_departamento == null) {
			return StringPool.BLANK;
		}
		else {
			return _departamento;
		}
	}

	@Override
	public void setDepartamento(String departamento) {
		_departamento = departamento;
	}

	@Override
	public String getObservacao() {
		if (_observacao == null) {
			return StringPool.BLANK;
		}
		else {
			return _observacao;
		}
	}

	@Override
	public void setObservacao(String observacao) {
		_observacao = observacao;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CursoInscricaoCpf.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CursoInscricaoCpf toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CursoInscricaoCpf)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CursoInscricaoCpfImpl cursoInscricaoCpfImpl = new CursoInscricaoCpfImpl();

		cursoInscricaoCpfImpl.setInscricaoCpfId(getInscricaoCpfId());
		cursoInscricaoCpfImpl.setInscricaoId(getInscricaoId());
		cursoInscricaoCpfImpl.setNome(getNome());
		cursoInscricaoCpfImpl.setCpf(getCpf());
		cursoInscricaoCpfImpl.setEndereco(getEndereco());
		cursoInscricaoCpfImpl.setBairro(getBairro());
		cursoInscricaoCpfImpl.setCidade(getCidade());
		cursoInscricaoCpfImpl.setEstado(getEstado());
		cursoInscricaoCpfImpl.setCep(getCep());
		cursoInscricaoCpfImpl.setDddTelefone(getDddTelefone());
		cursoInscricaoCpfImpl.setTelefone(getTelefone());
		cursoInscricaoCpfImpl.setEmail(getEmail());
		cursoInscricaoCpfImpl.setEmpresa(getEmpresa());
		cursoInscricaoCpfImpl.setCargo(getCargo());
		cursoInscricaoCpfImpl.setDepartamento(getDepartamento());
		cursoInscricaoCpfImpl.setObservacao(getObservacao());

		cursoInscricaoCpfImpl.resetOriginalValues();

		return cursoInscricaoCpfImpl;
	}

	@Override
	public int compareTo(CursoInscricaoCpf cursoInscricaoCpf) {
		int value = 0;

		value = getNome().compareTo(cursoInscricaoCpf.getNome());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CursoInscricaoCpf)) {
			return false;
		}

		CursoInscricaoCpf cursoInscricaoCpf = (CursoInscricaoCpf)obj;

		long primaryKey = cursoInscricaoCpf.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CursoInscricaoCpf> toCacheModel() {
		CursoInscricaoCpfCacheModel cursoInscricaoCpfCacheModel = new CursoInscricaoCpfCacheModel();

		cursoInscricaoCpfCacheModel.inscricaoCpfId = getInscricaoCpfId();

		cursoInscricaoCpfCacheModel.inscricaoId = getInscricaoId();

		cursoInscricaoCpfCacheModel.nome = getNome();

		String nome = cursoInscricaoCpfCacheModel.nome;

		if ((nome != null) && (nome.length() == 0)) {
			cursoInscricaoCpfCacheModel.nome = null;
		}

		cursoInscricaoCpfCacheModel.cpf = getCpf();

		String cpf = cursoInscricaoCpfCacheModel.cpf;

		if ((cpf != null) && (cpf.length() == 0)) {
			cursoInscricaoCpfCacheModel.cpf = null;
		}

		cursoInscricaoCpfCacheModel.endereco = getEndereco();

		String endereco = cursoInscricaoCpfCacheModel.endereco;

		if ((endereco != null) && (endereco.length() == 0)) {
			cursoInscricaoCpfCacheModel.endereco = null;
		}

		cursoInscricaoCpfCacheModel.bairro = getBairro();

		String bairro = cursoInscricaoCpfCacheModel.bairro;

		if ((bairro != null) && (bairro.length() == 0)) {
			cursoInscricaoCpfCacheModel.bairro = null;
		}

		cursoInscricaoCpfCacheModel.cidade = getCidade();

		String cidade = cursoInscricaoCpfCacheModel.cidade;

		if ((cidade != null) && (cidade.length() == 0)) {
			cursoInscricaoCpfCacheModel.cidade = null;
		}

		cursoInscricaoCpfCacheModel.estado = getEstado();

		String estado = cursoInscricaoCpfCacheModel.estado;

		if ((estado != null) && (estado.length() == 0)) {
			cursoInscricaoCpfCacheModel.estado = null;
		}

		cursoInscricaoCpfCacheModel.cep = getCep();

		String cep = cursoInscricaoCpfCacheModel.cep;

		if ((cep != null) && (cep.length() == 0)) {
			cursoInscricaoCpfCacheModel.cep = null;
		}

		cursoInscricaoCpfCacheModel.dddTelefone = getDddTelefone();

		String dddTelefone = cursoInscricaoCpfCacheModel.dddTelefone;

		if ((dddTelefone != null) && (dddTelefone.length() == 0)) {
			cursoInscricaoCpfCacheModel.dddTelefone = null;
		}

		cursoInscricaoCpfCacheModel.telefone = getTelefone();

		String telefone = cursoInscricaoCpfCacheModel.telefone;

		if ((telefone != null) && (telefone.length() == 0)) {
			cursoInscricaoCpfCacheModel.telefone = null;
		}

		cursoInscricaoCpfCacheModel.email = getEmail();

		String email = cursoInscricaoCpfCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			cursoInscricaoCpfCacheModel.email = null;
		}

		cursoInscricaoCpfCacheModel.empresa = getEmpresa();

		String empresa = cursoInscricaoCpfCacheModel.empresa;

		if ((empresa != null) && (empresa.length() == 0)) {
			cursoInscricaoCpfCacheModel.empresa = null;
		}

		cursoInscricaoCpfCacheModel.cargo = getCargo();

		String cargo = cursoInscricaoCpfCacheModel.cargo;

		if ((cargo != null) && (cargo.length() == 0)) {
			cursoInscricaoCpfCacheModel.cargo = null;
		}

		cursoInscricaoCpfCacheModel.departamento = getDepartamento();

		String departamento = cursoInscricaoCpfCacheModel.departamento;

		if ((departamento != null) && (departamento.length() == 0)) {
			cursoInscricaoCpfCacheModel.departamento = null;
		}

		cursoInscricaoCpfCacheModel.observacao = getObservacao();

		String observacao = cursoInscricaoCpfCacheModel.observacao;

		if ((observacao != null) && (observacao.length() == 0)) {
			cursoInscricaoCpfCacheModel.observacao = null;
		}

		return cursoInscricaoCpfCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{inscricaoCpfId=");
		sb.append(getInscricaoCpfId());
		sb.append(", inscricaoId=");
		sb.append(getInscricaoId());
		sb.append(", nome=");
		sb.append(getNome());
		sb.append(", cpf=");
		sb.append(getCpf());
		sb.append(", endereco=");
		sb.append(getEndereco());
		sb.append(", bairro=");
		sb.append(getBairro());
		sb.append(", cidade=");
		sb.append(getCidade());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append(", cep=");
		sb.append(getCep());
		sb.append(", dddTelefone=");
		sb.append(getDddTelefone());
		sb.append(", telefone=");
		sb.append(getTelefone());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", empresa=");
		sb.append(getEmpresa());
		sb.append(", cargo=");
		sb.append(getCargo());
		sb.append(", departamento=");
		sb.append(getDepartamento());
		sb.append(", observacao=");
		sb.append(getObservacao());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("br.com.cnf.curso.inscricao.model.CursoInscricaoCpf");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>inscricaoCpfId</column-name><column-value><![CDATA[");
		sb.append(getInscricaoCpfId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inscricaoId</column-name><column-value><![CDATA[");
		sb.append(getInscricaoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome</column-name><column-value><![CDATA[");
		sb.append(getNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cpf</column-name><column-value><![CDATA[");
		sb.append(getCpf());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endereco</column-name><column-value><![CDATA[");
		sb.append(getEndereco());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bairro</column-name><column-value><![CDATA[");
		sb.append(getBairro());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cidade</column-name><column-value><![CDATA[");
		sb.append(getCidade());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cep</column-name><column-value><![CDATA[");
		sb.append(getCep());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dddTelefone</column-name><column-value><![CDATA[");
		sb.append(getDddTelefone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telefone</column-name><column-value><![CDATA[");
		sb.append(getTelefone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>empresa</column-name><column-value><![CDATA[");
		sb.append(getEmpresa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cargo</column-name><column-value><![CDATA[");
		sb.append(getCargo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departamento</column-name><column-value><![CDATA[");
		sb.append(getDepartamento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>observacao</column-name><column-value><![CDATA[");
		sb.append(getObservacao());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CursoInscricaoCpf.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CursoInscricaoCpf.class
		};
	private long _inscricaoCpfId;
	private long _inscricaoId;
	private String _nome;
	private String _cpf;
	private String _endereco;
	private String _bairro;
	private String _cidade;
	private String _estado;
	private String _cep;
	private String _dddTelefone;
	private String _telefone;
	private String _email;
	private String _empresa;
	private String _cargo;
	private String _departamento;
	private String _observacao;
	private CursoInscricaoCpf _escapedModel;
}
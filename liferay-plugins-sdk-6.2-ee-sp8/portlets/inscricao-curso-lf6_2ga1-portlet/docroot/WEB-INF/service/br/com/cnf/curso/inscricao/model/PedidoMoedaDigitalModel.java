/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package br.com.cnf.curso.inscricao.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the PedidoMoedaDigital service. Represents a row in the &quot;cnf_PedidoMoedaDigital&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link br.com.cnf.curso.inscricao.model.impl.PedidoMoedaDigitalModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link br.com.cnf.curso.inscricao.model.impl.PedidoMoedaDigitalImpl}.
 * </p>
 *
 * @author SEA
 * @see PedidoMoedaDigital
 * @see br.com.cnf.curso.inscricao.model.impl.PedidoMoedaDigitalImpl
 * @see br.com.cnf.curso.inscricao.model.impl.PedidoMoedaDigitalModelImpl
 * @generated
 */
public interface PedidoMoedaDigitalModel extends BaseModel<PedidoMoedaDigital> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a pedido moeda digital model instance should use the {@link PedidoMoedaDigital} interface instead.
	 */

	/**
	 * Returns the primary key of this pedido moeda digital.
	 *
	 * @return the primary key of this pedido moeda digital
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this pedido moeda digital.
	 *
	 * @param primaryKey the primary key of this pedido moeda digital
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the pedido moeda digital ID of this pedido moeda digital.
	 *
	 * @return the pedido moeda digital ID of this pedido moeda digital
	 */
	public long getPedidoMoedaDigitalId();

	/**
	 * Sets the pedido moeda digital ID of this pedido moeda digital.
	 *
	 * @param pedidoMoedaDigitalId the pedido moeda digital ID of this pedido moeda digital
	 */
	public void setPedidoMoedaDigitalId(long pedidoMoedaDigitalId);

	/**
	 * Returns the inscricao ID of this pedido moeda digital.
	 *
	 * @return the inscricao ID of this pedido moeda digital
	 */
	public long getInscricaoId();

	/**
	 * Sets the inscricao ID of this pedido moeda digital.
	 *
	 * @param inscricaoId the inscricao ID of this pedido moeda digital
	 */
	public void setInscricaoId(long inscricaoId);

	/**
	 * Returns the data pedido of this pedido moeda digital.
	 *
	 * @return the data pedido of this pedido moeda digital
	 */
	public Date getDataPedido();

	/**
	 * Sets the data pedido of this pedido moeda digital.
	 *
	 * @param dataPedido the data pedido of this pedido moeda digital
	 */
	public void setDataPedido(Date dataPedido);

	/**
	 * Returns the xml envio of this pedido moeda digital.
	 *
	 * @return the xml envio of this pedido moeda digital
	 */
	public String getXmlEnvio();

	/**
	 * Returns the localized xml envio of this pedido moeda digital in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized xml envio of this pedido moeda digital
	 */
	@AutoEscape
	public String getXmlEnvio(Locale locale);

	/**
	 * Returns the localized xml envio of this pedido moeda digital in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized xml envio of this pedido moeda digital. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getXmlEnvio(Locale locale, boolean useDefault);

	/**
	 * Returns the localized xml envio of this pedido moeda digital in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized xml envio of this pedido moeda digital
	 */
	@AutoEscape
	public String getXmlEnvio(String languageId);

	/**
	 * Returns the localized xml envio of this pedido moeda digital in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized xml envio of this pedido moeda digital
	 */
	@AutoEscape
	public String getXmlEnvio(String languageId, boolean useDefault);

	@AutoEscape
	public String getXmlEnvioCurrentLanguageId();

	@AutoEscape
	public String getXmlEnvioCurrentValue();

	/**
	 * Returns a map of the locales and localized xml envios of this pedido moeda digital.
	 *
	 * @return the locales and localized xml envios of this pedido moeda digital
	 */
	public Map<Locale, String> getXmlEnvioMap();

	/**
	 * Sets the xml envio of this pedido moeda digital.
	 *
	 * @param xmlEnvio the xml envio of this pedido moeda digital
	 */
	public void setXmlEnvio(String xmlEnvio);

	/**
	 * Sets the localized xml envio of this pedido moeda digital in the language.
	 *
	 * @param xmlEnvio the localized xml envio of this pedido moeda digital
	 * @param locale the locale of the language
	 */
	public void setXmlEnvio(String xmlEnvio, Locale locale);

	/**
	 * Sets the localized xml envio of this pedido moeda digital in the language, and sets the default locale.
	 *
	 * @param xmlEnvio the localized xml envio of this pedido moeda digital
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setXmlEnvio(String xmlEnvio, Locale locale, Locale defaultLocale);

	public void setXmlEnvioCurrentLanguageId(String languageId);

	/**
	 * Sets the localized xml envios of this pedido moeda digital from the map of locales and localized xml envios.
	 *
	 * @param xmlEnvioMap the locales and localized xml envios of this pedido moeda digital
	 */
	public void setXmlEnvioMap(Map<Locale, String> xmlEnvioMap);

	/**
	 * Sets the localized xml envios of this pedido moeda digital from the map of locales and localized xml envios, and sets the default locale.
	 *
	 * @param xmlEnvioMap the locales and localized xml envios of this pedido moeda digital
	 * @param defaultLocale the default locale
	 */
	public void setXmlEnvioMap(Map<Locale, String> xmlEnvioMap,
		Locale defaultLocale);

	/**
	 * Returns the xml retorno of this pedido moeda digital.
	 *
	 * @return the xml retorno of this pedido moeda digital
	 */
	public String getXmlRetorno();

	/**
	 * Returns the localized xml retorno of this pedido moeda digital in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized xml retorno of this pedido moeda digital
	 */
	@AutoEscape
	public String getXmlRetorno(Locale locale);

	/**
	 * Returns the localized xml retorno of this pedido moeda digital in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized xml retorno of this pedido moeda digital. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getXmlRetorno(Locale locale, boolean useDefault);

	/**
	 * Returns the localized xml retorno of this pedido moeda digital in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized xml retorno of this pedido moeda digital
	 */
	@AutoEscape
	public String getXmlRetorno(String languageId);

	/**
	 * Returns the localized xml retorno of this pedido moeda digital in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized xml retorno of this pedido moeda digital
	 */
	@AutoEscape
	public String getXmlRetorno(String languageId, boolean useDefault);

	@AutoEscape
	public String getXmlRetornoCurrentLanguageId();

	@AutoEscape
	public String getXmlRetornoCurrentValue();

	/**
	 * Returns a map of the locales and localized xml retornos of this pedido moeda digital.
	 *
	 * @return the locales and localized xml retornos of this pedido moeda digital
	 */
	public Map<Locale, String> getXmlRetornoMap();

	/**
	 * Sets the xml retorno of this pedido moeda digital.
	 *
	 * @param xmlRetorno the xml retorno of this pedido moeda digital
	 */
	public void setXmlRetorno(String xmlRetorno);

	/**
	 * Sets the localized xml retorno of this pedido moeda digital in the language.
	 *
	 * @param xmlRetorno the localized xml retorno of this pedido moeda digital
	 * @param locale the locale of the language
	 */
	public void setXmlRetorno(String xmlRetorno, Locale locale);

	/**
	 * Sets the localized xml retorno of this pedido moeda digital in the language, and sets the default locale.
	 *
	 * @param xmlRetorno the localized xml retorno of this pedido moeda digital
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setXmlRetorno(String xmlRetorno, Locale locale,
		Locale defaultLocale);

	public void setXmlRetornoCurrentLanguageId(String languageId);

	/**
	 * Sets the localized xml retornos of this pedido moeda digital from the map of locales and localized xml retornos.
	 *
	 * @param xmlRetornoMap the locales and localized xml retornos of this pedido moeda digital
	 */
	public void setXmlRetornoMap(Map<Locale, String> xmlRetornoMap);

	/**
	 * Sets the localized xml retornos of this pedido moeda digital from the map of locales and localized xml retornos, and sets the default locale.
	 *
	 * @param xmlRetornoMap the locales and localized xml retornos of this pedido moeda digital
	 * @param defaultLocale the default locale
	 */
	public void setXmlRetornoMap(Map<Locale, String> xmlRetornoMap,
		Locale defaultLocale);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public String[] getAvailableLanguageIds();

	public String getDefaultLanguageId();

	public void prepareLocalizedFieldsForImport() throws LocaleException;

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(
		br.com.cnf.curso.inscricao.model.PedidoMoedaDigital pedidoMoedaDigital);

	@Override
	public int hashCode();

	@Override
	public CacheModel<br.com.cnf.curso.inscricao.model.PedidoMoedaDigital> toCacheModel();

	@Override
	public br.com.cnf.curso.inscricao.model.PedidoMoedaDigital toEscapedModel();

	@Override
	public br.com.cnf.curso.inscricao.model.PedidoMoedaDigital toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}